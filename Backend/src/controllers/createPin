import { Request, Response } from 'express';
import * as Bcrypt from 'bcryptjs';
import User from '../models/userModel';

export async function createPin(req: Request, res: Response) {
  try {
    const { id } = req.params;
    let { transactionPin, pinConfirmation } = req.body;
 
    transactionPin = transactionPin.toString();
    pinConfirmation = pinConfirmation.toString();
 
    if (transactionPin.length !== 4 || !/^\d+$/.test(transactionPin)) {
      return res.status(400).send('Invalid transaction pin');
    }
 
    if (transactionPin !== pinConfirmation) {
      return res.status(400).send('Transaction pin confirmation does not match');
    }
 
    const salt = await Bcrypt.genSalt(10);
    const hashedPin = await Bcrypt.hash(transactionPin, salt);
 
    const user = await User.findByIdAndUpdate(
      id,
      { transactionPin: hashedPin, transactionPinSet: true },
      { new: true },
    );
    return res.status(200).json({
      message: 'User updated successfully',
      data: user,
    });
  } catch (error: any) {
    return res.status(500).send('Internal server error: ' + error.message);
  }
}