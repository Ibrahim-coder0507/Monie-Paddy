# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  Backend-install:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: use Node.js
      working-directory: Backend
      run: yarn --ignore-engines --frozen-lockfile
    - run: yarn --ignore-engines --frozen-lockfile 


  Backend-build:

    runs-on: ubuntu-latest
    needs: Backend-install 

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: use Node.js
      working-directory: Backend
      run: yarn --ignore-engines --frozen-lockfile
    - name: build backend
      working-directory: Backend
      run: yarn build

  Frontend-install:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      working-directory: Frontend
      run: yarn --ignore-engines --frozen-lockfile
      run: yarn install
    - name: use Node.js
      working-directory: Frontend
      run: yarn --ignore-engines --frozen-lockfile
    - run: yarn --ignore-engines --frozen-lockfile 


  Frontend-build:

    runs-on: ubuntu-latest
    needs: Frontend-install 

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: use Node.js
      working-directory: Frontend
      run: yarn --ignore-engines --frozen-lockfile
    - name: build frontend
      working-directory: Frontend
      run: yarn build
  
  Deploy:
    runs-on: ubuntu-latest
    needs: [Frontend-build]

    env:
      VERCEL_ORG_ID: team_d59eQEKtLRnmcMLDwroxOIMX
      VERCEL_PROJECT_ID: prj_sRIXzhI3Ar7At1QezOw3S8j9oIZW

    steps:
        - uses: actions/checkout@v3
        - name: Install Vercel CLI
          run: yarn global add vercel
              
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=TKerx8tTIzbyH0v1eyieUM8n

        # - name: Install Project dependencies
        #   working-directory: Frontend
        #   run: yarn build

        - name: Pull Project Settings
          working-directory: Frontend
          run: vercel pull --yes --environment=production --token=TKerx8tTIzbyH0v1eyieUM8n

        - name: Build Project Artifacts
          working-directory: Frontend
          run: vercel build --prod --token=TKerx8tTIzbyH0v1eyieUM8n

        - name: Deploy Project Artifacts
          working-directory: Frontend
          run: vercel deploy --prebuilt --prod --token=TKerx8tTIzbyH0v1eyieUM8n